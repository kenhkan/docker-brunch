// Generated by CoffeeScript 1.3.3
(function() {
  var DockerRunner, child_process, cwd;

  child_process = require('child_process');

  cwd = process.cwd();

  module.exports = DockerRunner = (function() {

    DockerRunner.prototype.brunchPlugin = true;

    DockerRunner.prototype.type = 'javascript';

    DockerRunner.prototype.extension = 'js';

    DockerRunner.prototype.pattern = /src\/.+\.(js|coffee|litcoffee)/;

    function DockerRunner(config) {
      var input_dir, output_dir, _ref, _ref1;
      this.config = config;
      _ref1 = ((_ref = this.config.plugins) != null ? _ref.docker : void 0) || {}, input_dir = _ref1.input_dir, output_dir = _ref1.output_dir;
      this.prefix = input_dir || '';
      this.inputDir = input_dir != null ? " -i " + cwd + "/" + input_dir : '';
      this.outputDir = output_dir != null ? " -o " + cwd + "/" + output_dir : '';
    }

    DockerRunner.prototype.compile = function(params, callback) {
      this.runDocker([params.path]);
      return callback(null, params);
    };

    DockerRunner.prototype.runDocker = function(files) {
      var command, file;
      if (files == null) {
        files = [];
      }
      files = (function() {
        var _i, _len, _results;
        _results = [];
        for (_i = 0, _len = files.length; _i < _len; _i++) {
          file = files[_i];
          _results.push(file.replace(new RegExp("^" + this.prefix + "/"), ''));
        }
        return _results;
      }).call(this);
      command = "" + __dirname + "/../node_modules/.bin/docker" + this.inputDir + this.outputDir + " " + (files.join(' '));
      console.log('*** command');
      console.log(command);
      console.log('---');
      return child_process.exec(command, function(error, stdout, stderr) {
        if (error != null) {
          return console.log("exec error: " + error);
        }
      });
    };

    return DockerRunner;

  })();

}).call(this);
